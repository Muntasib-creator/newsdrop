[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "app"
version = "0.1.0"
description = "NewsAPI integration with FastAPI"
readme = "README.md"
requires-python = ">=3.10"
license = { text = "MIT" }
authors = [
    { name = "Your Name", email = "your.email@example.com" }
]
dependencies = [
    "fastapi>=0.104.0",
    "uvicorn>=0.23.2",
    "pydantic>=2.4.2",
    "python-multipart>=0.0.6",
    "python-dotenv>=1.0.0",
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "sqlalchemy>=2.0.22",
    "alembic>=1.12.0",
    "psycopg2-binary>=2.9.9",
    "asyncpg>=0.28.0",
    "httpx>=0.25.0",
    "requests>=2.31.0",
    "pydantic-settings>=2.0.3",
    "tenacity>=8.2.3",
    "structlog>=23.2.0",
    "ruff>=0.1.3",
]
[tool.hatch.build.targets.wheel]
packages = ["app"]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.2",
    "pytest-asyncio>=0.21.1",
    "pytest-cov>=4.1.0",
    "requests-mock>=1.11.0",
    "pytest-mock>=3.11.1",
    "ruff>=0.1.3",
    "black>=23.10.0",
    "isort>=5.12.0",
    "mypy>=1.6.1",
]

[project.scripts]
newsdrop = "app.main:start"

[tool.ruff]
line-length = 100
target-version = "py310"
select = ["E", "F", "I", "N", "W", "B", "C4", "ARG", "SIM"]
ignore = ["E501"]
exclude = [
    ".git",
    ".ruff_cache",
    ".venv",
    "venv",
    "__pycache__",
    "alembic",
]

[tool.ruff.isort]
known-third-party = ["fastapi", "pydantic", "sqlalchemy"]

[tool.black]
line-length = 100
target-version = ["py310"]
include = '\.pyi?$'

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
strict_optional = true

[[tool.mypy.overrides]]
module = ["tests.*"]
disallow_untyped_defs = false
disallow_incomplete_defs = false

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
python_classes = "Test*"
asyncio_mode = "auto"